task: output Hello World
code:
#include <stdio.h>

int main()
{
    printf("Hello world");
    
    return 0;
}
output:
Hello world

task: input and output numbers
code:
#include <stdio.h>

int main()
{	
	int num1, num2;

	printf("Enter numbers ");
	
	scanf("%d %d", &num1, &num2);
	
	printf("You numbers %d and %d", num1, num2);
	
	return 0;
}
output:
Enter numbers 5 5
You numbers 5 and 5

task: input and output character
code:
#include <stdio.h>

int main()
{	
	char ch;

	printf("Enter a character ");
	
	scanf("%c", &ch);
	
	printf("Your character %c", ch);
	
	return 0;
}
output:
Enter a character z
Your character z

task: input and output your name
code:
#include <stdio.h>

int main()
{	
	char string[50];

	printf("Enter your name ");
	
	gets(string);
	
	printf("Welcome %s", string);
	
	return 0;
}
output:
Enter your name ferbl ferbl
Welcome ferbl ferbl

task:
1) input the number
2) compare inputted number
if the number is less than 100, display "Number is less than 100"
if the number is 100, display "Number is 100"
if the number is greater than 100, display "Number is greater than 100"
code:
#include <stdio.h>

int main()
{	
	int number;
	
	printf("Enter a number ");
	scanf("%d", &number);
	
	if(number < 100)
	{
		printf("Number is less than 100");
	}
	else if(number == 100)
	{
		printf("Number is 100");
	}
	else
	{
		printf("Number is greater than 100");
	}
	
	return 0;
}
output:
Enter a number 5
Number is less than 100
output:
Enter a number 100
Number is 100
output:
Enter a number 299
Number is greater than 100

task: 
1) input your grade
2) compare inputted grade
if the grade is A, display "Excellent"
if the grade is B, display "Keep it up" etc. 
if the grade is not equal to A B C D F, display "Invalid grade"
code:
#include <stdio.h>

int main()
{	
	char grade;
	printf("Enter your grade ");
	scanf("%c", &grade);
	
	switch(grade)
	{
		case 'A':
			printf("Excellent");
			break;
		
		case 'B':
			printf("Keep it up");
			break;
		
		case 'C':
			printf("Well done");
			break;
		
		case 'D':
			printf("You passed");
			break;
		
		case 'F':
			printf("Better luck next time");
			break;
		
		default:
			printf("Invalid grade");
	}
	
	return 0;
}
output:
Enter your grade A
Excellent
output:
Enter your grade D
You passed
output:
Enter your grade z
Invalid grade

task:
1) input your char
2) compare inputted char
if the grade is a A e E i I o O u U, display "is a vowel"
if the grade is not a A e E i I o O u U, display "is not vowel"
code:
#include <stdio.h>

int main()
{	
	char ch;
	printf("Enter your char ");
	scanf("%c", &ch);
	
	switch(ch)
	{
		case 'a':
		case 'A':
		case 'e':
		case 'E':
		case 'i':
		case 'I':
		case 'o':
		case 'O':
		case 'u':
		case 'U':
			printf("%c is a vowel", ch);
			break;
			
		default:
			printf("%c is not vowel", ch);
	}
	
	return 0;
}
output:
Enter your char a
a is a vowel
output:
Enter your char z
z is not vowel

task:
add library <ctype.h>, 
islower(ch) is a lowercase character?
toupper(ch), char to uppercase
tolower(ch), char to lowercase
if the char is lowercase, display uppercase
if the char is uppercase, display lowercase
code:
#include <stdio.h>
#include <ctype.h>

int main()
{	
	char ch;
	printf("Enter your char ");
	ch = getchar();
	
	if(islower(ch))
	{
		printf("Reverse char %c", toupper(ch));
	}
	else
	{
		printf("Reverse char %c", tolower(ch));
	}
	
	return 0;
}
output:
Enter your char d
Reverse char D

task:
swap two numbers
code:
#include <stdio.h>

int main()
{	
	int x = 5;
	int y = 55;
	int temporary;
	
	temporary = x;
	x = y;
	y = temporary;
	
	printf("x = %d \n", x);
	printf("y = %d \n", y);
	
	return 0;
}
output:
x = 55
y = 5

task:
find the greatest and smallest number
code:
#include <stdio.h>

int a;
int b;

int main()
{	
	printf("Enter the two number to find the greatest and smallest number ");
	
	scanf("%d %d", &a, &b);
	
	if(a == b)
	{
		printf("The numbers are equal");
	}
	else if(a > b)
	{
		printf("%d greatess \n", a);
		printf("%d smallest \n", b);
	}
	else
	{
		printf("%d smallest \n", a);
		printf("%d greatess \n", b);
	}
	
	return 0;
}
output:
Enter the two number to find the greatest and smallest number 55 5
55 greatess
5 smallest
output:
Enter the two number to find the greatest and smallest number 15 100
15 smallest
100 greatess
output:
Enter the two number to find the greatest and smallest number 5 5
The numbers are equal

task:
display numbers from 0 to 9
if x is less 10 then a is increased by 1
code:
#include <stdio.h>

int main()
{	
	int x = 0;
	
	for(x = 0; x < 10; x++)
	{
		printf("x = %d \n", x);
	}
	
	return 0;
}
output:
x = 0
x = 1
x = 2
x = 3
x = 4
x = 5
x = 6
x = 7
x = 8
x = 9

task:
display numbers from 0 to 9
if x is less 10 then a is increased by 1
code:
#include <stdio.h>

int main()
{	
	int x = 0;
	
	while(x < 10)
	{
		printf("x = %d \n", x);
		
		x++;
	}
	
	return 0;
}
output:
x = 0
x = 1
x = 2
x = 3
x = 4
x = 5
x = 6
x = 7
x = 8
x = 9

task:
display numbers from 10 to 1
decrement x by 1
if x is more 0
repeat the cycle
code:
#include <stdio.h>

int main()
{	
	int x = 10;
	
	do
	{
		printf("x = %d \n", x);
		
		x--;
	}
	while(x > 0);
	
	return 0;
}
output:
x = 10
x = 9
x = 8
x = 7
x = 6
x = 5
x = 4
x = 3
x = 2
x = 1

task:
display a rectangle
code:
#include <stdio.h>

int main()
{	
	int a;
	int b;
	
	for(a = 0; a < 5; a++)
	{
		for(b = 0; b < 3; b++)
		{
			printf("*");
		}
		printf("\n");
	}
	
	return 0;
}
output:
***
***
***
***
***

task:
calculate factorial
5! = 1 · 2 · 3 · 4 · 5 = 120
code:
#include <stdio.h>

int main()
{	
	int i;
	int n;
	int fact = 1;

	printf("Enter a number ");
	scanf("%d", &n);
	
	for(i = 1; i <= n; i++)
	{		
		fact = fact * i;
		
		printf("i = %d \n", i);
		printf("fact = %d \n", fact);
	}
	
	printf("Factorial of %d is %d", n, fact);
	
	return 0;
}
output:
Enter a number 5
i = 1
fact = 1
i = 2
fact = 2
i = 3
fact = 6
i = 4
fact = 24
i = 5
fact = 120
Factorial of 5 is 120

task:
calculate the fibonacci
0 + 1 + 1 + 2 + 3 + 5
code:
#include <stdio.h>

void fibonacci(int num);

int main()
{	
	int num = 0;
	
	printf("Enter the number to calculate the fibonacci ");
	
	scanf("%d", &num);
	
	fibonacci(num);
	
	return 0;
}

void fibonacci(int num)
{
	int a = 0;
	int b = 1;
	int c;
	int i = 3;

	if(num == 1)
	{
		printf("%d", a);
	}
	
	if(num >= 2)
	{
		printf("%d %d ", a, b);
	}
	
	while(num >= i)
	{
		c = a + b;
		
		printf("%d ", c);
		
		a = b;
		b = c;
		
		i++;
	}
}
output:
Enter the number to calculate the fibonacci 6
0 1 1 2 3 5

task: reverse number 25
0 * 10 = 0
0 + (25 % 10 = 5) = 5
25 / 10 = 2.5 ~ 2

5 * 10 = 50
50 + (2 % 10 = 2) = 52
2 / 10 = 0.2 ~ 0
code:
#include <stdio.h>

int main()
{	
	int number;
	int reverse = 0;
	
	printf("Enter a number ");
	scanf("%d", &number);
	
	while(number != 0)
	{
		reverse = reverse * 10;
		printf("reverse1 = %d, number1 = %d \n", reverse, number);
		
		reverse = reverse + number % 10; 
		printf("reverse2 = %d, number2 = %d \n", reverse, number);
		
		number = number / 10;
		printf("reverse3 = %d, number3 = %d \n", reverse, number);
		
		printf("\n");
	}
	
	printf("Reverse number %d ", reverse);
	
	return 0;
}
output:
Enter a number 25
reverse1 = 0, number1 = 25
reverse2 = 5, number2 = 25
reverse3 = 5, number3 = 2

reverse1 = 50, number1 = 2
reverse2 = 52, number2 = 2
reverse3 = 52, number3 = 0

Reverse number 52

task:
check if the number is a palindrome
code:
#include <stdio.h>

int reverseNumber(int num);

int main()
{	
	int number;
	
	printf("Enter a number ");
	scanf("%d", &number);
	
	if(number == reverseNumber(number))
	{
		printf("The number %d is a polindrome", number);
	}
	else
	{
		printf("The number %d is not a polindrome", number);
	}
	
	return 0;
}

int reverseNumber(int num)
{
	int reverse = 0;
	
	while(num != 0)
	{
		reverse = reverse * 10;
		
		reverse = reverse + num % 10; 
		
		num = num / 10;
	}
	
	return reverse;
}
output:
Enter a number 121
The number 121 is a polindrome
output:
Enter a number 25
The number 25 is not a polindrome

task:
calculate the sum of all digits 123
1 + 2 + 3 = 6
code:
#include <stdio.h>

int main()
{	
	int number;
	int remainder;
	int sum;
	
	printf("Enter the number to calculate the sum of all digits ");
	scanf("%d", &number);
	
	while(number != 0)
	{
		remainder = number % 10;
		printf("remainder = %d \n", remainder);
		
		sum += remainder;
		printf("sum = %d \n", sum);
		
		number = number / 10;
		printf("number = %d \n", number);
		
		printf("\n");
	}
	
	printf("Sum of all digits %d", sum);
	
	return 0;
}
output:
Enter the number to calculate the sum of all digits 123
remainder = 3
sum = 3
number = 12

remainder = 2
sum = 5
number = 1

remainder = 1
sum = 6
number = 0

Sum of all digits 6

task:
сalculate the average of the entered numbers
5 + 7 + 10 = 22 / 3 = 7.33333
code:
#include <stdio.h>

int main()
{	
	int elements;
	float sum = 0;
	float input;
	float average;
	int i;

	printf("Enter the number of elements to find the average ");
	scanf("%d", &elements);
	
	printf("Enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%f", &input);
		
		sum += input;
	}
	
	average = sum / elements;
	
	printf("The average number is %f", average);
	
	return 0;
}
output:
Enter the number of elements to find the average 3
Enter 3 elements
5
7
10
The average number is 7.333333

task:
find the armstrong number
(1 * 1 * 1) + (5 * 5 * 5) + (3 * 3 * 3) = 153
code:
#include <stdio.h>

int main()
{	
	int begin = 152;
	int end = 154;
	int remainder;
	int number;
	int sum;

	printf("Search armstrong number \n");
	
	for(begin; end >= begin; begin++)
	{
		number = begin;
		printf("*number = %d \n", number);
		
		sum = 0;
		
		while(number != 0)
		{
			remainder = number % 10;
			printf("#remainder = %d \n", remainder);
			
			sum += remainder*remainder*remainder;
			printf("!sum = %d \n", sum);
			
			number = number / 10;
			printf("num = %d \n", number);
		}
		
		printf("\n");
		
		if(sum == begin)
		{
			printf("This is armstrong number %d \n\n", begin);
		}
	}
	
	
	return 0;
}
output:
Search armstrong number
*number = 152
#remainder = 2
!sum = 8
num = 15
#remainder = 5
!sum = 133
num = 1
#remainder = 1
!sum = 134
num = 0

*number = 153
#remainder = 3
!sum = 27
num = 15
#remainder = 5
!sum = 152
num = 1
#remainder = 1
!sum = 153
num = 0

This is armstrong number 153

*number = 154
#remainder = 4
!sum = 64
num = 15
#remainder = 5
!sum = 189
num = 1
#remainder = 1
!sum = 190
num = 0

task:
check if the entered number is armstrong number
code:
#include <stdio.h>

int main()
{	
	int numberInput;
	int numberCheck;
	int remainder;
	int sum = 0;
	
	
	printf("Check if the entered number is an armstrong number ");
	scanf("%d", &numberInput);
	
	numberCheck = numberInput;
	
	while(numberCheck != 0)
	{
		remainder = numberCheck % 10;
		
		sum += remainder*remainder*remainder;
		
		numberCheck = numberCheck / 10;
	}
	
	printf("sum = %d \n\n", sum);
	
	if(numberInput == sum)
	{
		printf("This is the armstrong number");
	}
	else
	{
		printf("This is not armstrong number");
	}
	
	return 0;
}
output:
Check if the entered number is an armstrong number 153
sum = 153

This is the armstrong number
output:
Check if the entered number is an armstrong number 55
sum = 250

This is not armstrong number

task:
whether the number is even or odd
& - AND
checks decimal in binary form
1 - 1 = 1
1 - 0 = 0
0 - 0 = 0
10 decimal = 1010 binary
9 decimal = 1001 binary
1 decimal = 0001 binary
10 & 1
1010
0001
0000 = 0 decimal = even
9 & 1
1001
0001
0001 = 1 decimal = odd
if(0 = false)
if(1 = true)
code:
#include <stdio.h>

int main()
{		
	printf("10 & 1 = %d ", 10 & 1);
	
	if(10 & 1)
	{
		printf("odd");
	}
	else
	{
		printf("even");
	}
	
	printf("\n");
	
	printf("9 & 1 = %d ", 9 & 1);
	
	if(9 & 1)
	{
		printf("odd");
	}
	else
	{
		printf("even");
	}
	
	
	return 0;
}
output:
10 & 1 = 0 even
9 & 1 = 1 odd

task:
check if the number is even or odd
(10 / 2) = 5 * 2 = 10 == 10 (true) - even
(5 / 2) = 2 * 2 = 4 == 5 (false) - odd
code:
#include <stdio.h>

int main()
{		
	int number;

	printf("enter a number to check if the number is even or odd ");
	scanf("%d", &number);
	
	if((number / 2) * 2 == number)
	{
		printf("This is an even number");
	}
	else
	{
		printf("This is an odd number");
	}

	return 0;
}
output:
Enter a number to check if the number is even or odd 10
This is an even number
output:
Enter a number to check if the number is even or odd 5
This is an odd number

task:
find the factors of the number
code:
#include <stdio.h>

int main()
{		
	int number;
	int factor = 1;

	printf("enter a number to find the factor of ");
	scanf("%d", &number);
	
	for(factor; number >= factor; factor++)
	{		
		printf("number=%d %% factor=%d = remainder=%d \n", number, factor, number % factor);

		if(number % factor == 0)
		{
			printf("found factor = %d \n", factor);
		}
	}

	return 0;
}
output:
enter a number to find the factor of 12
number=12 % factor=1 = remainder=0
found factor = 1
number=12 % factor=2 = remainder=0
found factor = 2
number=12 % factor=3 = remainder=0
found factor = 3
number=12 % factor=4 = remainder=0
found factor = 4
number=12 % factor=5 = remainder=2
number=12 % factor=6 = remainder=0
found factor = 6
number=12 % factor=7 = remainder=5
number=12 % factor=8 = remainder=4
number=12 % factor=9 = remainder=3
number=12 % factor=10 = remainder=2
number=12 % factor=11 = remainder=1
number=12 % factor=12 = remainder=0
found factor = 12

task:
find the sum of the entered numbers
code:
#include <stdio.h>

int main()
{		
	int number;
	int input;
	int sum = 0;
	int i;

	printf("how many numbers will you sum? ");
	scanf("%d", &number);
	
	printf("enter %d numbers \n", number);
	
	for(i = 1; number >= i; i++)
	{
		scanf("%d", &input);
		
		sum += input;
	}
	
	printf("Sum = %d", sum);

	return 0;
}
output:
how many numbers will you sum? 3
enter 3 numbers
1
2
3
Sum = 6

task:
check if the number is prime
code:
#include <stdio.h>

int isPrime(int num);

int main()
{	
	int number;

	printf("enter a number to check if is prime ");
	scanf("%d", &number);
	

	if(isPrime(number))
	{
		printf("prime number");
	}
	else
	{
		printf("composite number");
	}
	

	return 0;
}

int isPrime(int num)
{
	int i = 2;
	
	printf("num = %d \n", num);
	
	if(1 >= num)
	{
		return 0;
	}
	
	for(i; num > i; i++)
	{
		printf("num=%d %% i=%d = %d \n", num, i, num % i);
		
		if(num % i == 0)
		{
			return 0;
		}
	}
	
	return 1;
}
output:
enter a number to check if is prime 11
num = 11
num=11 % i=2 = 1
num=11 % i=3 = 2
num=11 % i=4 = 3
num=11 % i=5 = 1
num=11 % i=6 = 5
num=11 % i=7 = 4
num=11 % i=8 = 3
num=11 % i=9 = 2
num=11 % i=10 = 1
prime number
output:
enter a number to check if is prime 9
num = 9
num=9 % i=2 = 1
num=9 % i=3 = 0
composite number

task:
find the greatest input number
code:
#include <stdio.h>

int main()
{	
	int number;
	int input;
	int big;
	int i;

	printf("how many numbers will you enter to find the greatest? ");
	scanf("%d", &number);
	
	printf("enter %d numbers \n", number);
	
	printf("first ");
	scanf("%d", &big);
	
	for(i = 2; number >= i; i++)
	{
		scanf("%d", &input);
		
		printf("input=%d, big=%d \n", input, big);
		
		if(input > big)
		{
			big = input;
		}
	}
	
	printf("greatest number %d", big);
	
	return 0;
}
output:
how many numbers will you enter to find the greatest? 3
enter 3 numbers
first 5
3
input=3, big=5
10
input=10, big=5
greatest number 10

task:
calculate exponent number
code:
#include <stdio.h>

int main()
{	
	int number;
	int exponent;
	int exponentSave;
	int value = 1;

	printf("enter number ");
	scanf("%d", &number);
	
	printf("enter exponent ");
	scanf("%d", &exponent);
	
	exponentSave = exponent;
	
	while(exponent > 0)
	{
		value *= number;
		
		exponent--;
	}
	
	printf("%d^%d = %d", number, exponentSave, value);
	
	return 0;
}
output:
enter number 4
enter exponent 3
4^3 = 64

task:
display the multiplication table of the entered number
code:
#include <stdio.h>

int main()
{	
	int number;
	int value;
	int i;

	printf("what number do you need as a multiplication table? ");
	scanf("%d", &number);
	
	for(i = 1; i <= 10; i++)
	{
		value = number * i;
		
		printf("%d * %d = %d \n", number, i, value);
	}
	
	return 0;
}
output:
what number do you need as a multiplication table? 5
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50

task:
enter and display array elements
code:
#include <stdio.h>

int main()
{	
	int number;
	int array[2]; 
	
	printf("enter the first element of the array ");
	scanf("%d", &array[0]);
	
	printf("enter the second element of the array ");
	scanf("%d", &array[1]);
	
	printf("enter the third element of the array ");
	scanf("%d", &array[2]);
	
	
	printf("array[0] = %d \n", array[0]);
	printf("array[1] = %d \n", array[1]);
	printf("array[2] = %d \n", array[2]);
	
	return 0;
}
output:
enter the first element of the array 45
enter the second element of the array 54
enter the third element of the array 15
array[0] = 45
array[1] = 54
array[2] = 15

task:
enter and display array elements
code:
#include <stdio.h>

int main()
{	
	int array[100]; 
	int number;
	int i;
	
	printf("how many elements will you enter into the array? ");
	scanf("%d", &number);
	
	printf("enter %d elements \n", number);
	
	for(i = 0; number > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("array contains ");
	
	for(i = 0; number > i; i++)
	{
		printf("%d ", array[i]);
	}
	
	return 0;
}
output:
how many elements will you enter into the array? 3
enter 3 elements
55
56
45
array contains 55 56 45

task:
reverse number array
code:
#include <stdio.h>

int main()
{	
	int array[2];
	int arrayRev[2];
	
	array[0] = 11;
	array[1] = 22;
	array[2] = 33;
	
	printf("%d \n", array[0]);
	printf("%d \n", array[1]);
	printf("%d \n", array[2]);
	
	arrayRev[0] = array[2];
	arrayRev[1] = array[1];
	arrayRev[2] = array[0];

	printf("\n");
	
	printf("%d \n", arrayRev[0]);
	printf("%d \n", arrayRev[1]);
	printf("%d \n", arrayRev[2]);
	
	return 0;
}
output:
11
22
33

55
44
33

task:
reverse number array
(end = elements - 1) (3 - 1 = 2) array starts from zero 
code:
#include <stdio.h>

int main()
{	
	int elements = 3;
	int array[elements];
	int arrayRev[elements];
	int i;
	int end;
	
	array[0] = 11;
	array[1] = 22;
	array[2] = 33;
	
	end = elements - 1;
	
	for(i = 0; elements > i; i++)
	{
		printf("i=%d, end=%d \n", i, end);
		
		arrayRev[i] = array[end];
		
		end--;
	}
	
	printf("reverse array \n");
	
	for(i = 0; elements > i; i++)
	{
		printf("%d \n", arrayRev[i]);
	}
	
	return 0;
}
output:
i=0, end=2
i=1, end=1
i=2, end=0
reverse array
33
22
11

task:
1) enter the numbers into the array
2) reverse the entered array
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int arrayRev[100];
	int number;
	int end;
	int i;
	
	
	printf("how many elements will you enter into the array? ");
	scanf("%d", &number);
	
	
	printf("enter %d elements \n", number);
	
	for(i = 0; number > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("find the end number of an array \n");
	end = number - 1;
	
	
	printf("reverse the array... \n");
	
	for(i = 0; number > i; i++)
	{
		arrayRev[i] = array[end];
		
		end--;
	}
	
	
	printf("display reverse array \n");
	
	for(i = 0; number > i; i++)
	{
		printf("%d \n", arrayRev[i]);
	}
	
	return 0;
}
output:
how many elements will you enter into the array? 3
enter 3 elements
11
22
33
find the end number of an array
reverse the array...
display reverse array
33
22
11

task:
calculate the length of the string
code:
#include <stdio.h>

int main()
{	
	char string[100];
	int number = 0;

	printf("Enter the string ");
	gets(string);
	
	while(string[number] != '\0')
	{
		printf("%c = %d \n", string[number], number);
		
		number++;
		
		printf("%d \n", number);
	}
	
	printf("The length of the string is %d", number);
	
	return 0;
}
output:
Enter the string ferbl
f = 0
1
e = 1
2
r = 2
3
b = 3
4
l = 4
5
The length of the string is 5

task:
reverse a string
string Org [f-0 e-1 r-2 b-3 l-4]
string Rev [l-0 b-1 r-2 e-3 f-4]
l-4 -> l-0
code:
#include <stdio.h>

int main()
{	
	char stringOrg[100];
	char stringRev[100];
	int length = 0;
	
	int begin;
	int end;

	printf("Enter the string ");
	gets(stringOrg);
	
	
	while(stringOrg[length] != '\0')
	{
		printf("%c - %d \n", stringOrg[length], length);
		
		length++;
		
		printf("%d \n", length);
	}
	
	
	end = length - 1;
	
	
	for(begin = 0; length > begin; begin++)
	{
		printf("begin = %d, end = %d \n", begin, end);
		
		stringRev[begin] = stringOrg[end];
		
		end--;
	}
	
	printf("\n");
	printf("Your reverse a string %s", stringRev);
	
	return 0;
}
output:
Enter the string ferbl
f - 0
1
e - 1
2
r - 2
3
b - 3
4
l - 4
5

begin = 0, end = 4
begin = 1, end = 3
begin = 2, end = 2
begin = 3, end = 1
begin = 4, end = 0

Your reverse a string lbref

task:
check if the entered number is an integer or a floating point
code:
#include <stdio.h>

int main()
{	
	char number[10];
	int flag = 0;
	int i = 0;
	
	printf("enter a number to check if is integer or float ");
	scanf("%s", number);
	
	while(number[i] != '\0')
	{
		if(number[i] == '.')
		{
			flag = 1;
			
			break;
		}
		
		i++;
	}
	
	
	if(flag)
	{
		printf("this float-point number");
	}
	else
	{
		printf("this integer number");
	}
	
	return 0;
}
output:
enter a number to check if is integer or float 15.9
this float-point number
output:
enter a number to check if is integer or float 16
this integer number

task:
replace number in array
code:
#include <stdio.h>

void displayArray();

	int array[100];
	int elements;
	int position;
	int newNumber;
	int i;
	
int main()
{	
	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	
	printf("Enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	displayArray();
	
	
	printf("which position to replace? \n");
	scanf("%d", &position);
	
	
	printf("what number? \n");
	scanf("%d", &newNumber);
	
	array[position] = newNumber;
	
	displayArray();
	
	return 0;
}

void displayArray()
{
	printf("\n");
	printf("array contains \n");
	
	for(i = 0; elements > i; i++)
	{	
		printf("position %d = %d \n", i,array[i]);
	}
}
output:
how many elements to add to the array? 3
Enter 3 elements
11
22
33

array contains
position 0 = 11
position 1 = 22
position 2 = 33
which position to replace?
1
what number?
55

array contains
position 0 = 11
position 1 = 55
position 2 = 33

task:
insert a number into an array with a shift of numbers
input array
el = 3   i = el - 1
i = 2  pos = 1
0-11  1-22  2-33  3-00
0-11  1-22  2-33->3-33   i -> i+1
0-11  1-22->2-22  3-33
0-11  1-55  2-22  3-33
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int elements;
	int insertNum;
	int position;
	int i;

	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	printf("enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("positions of elements \n");
	
	for(i = 0; elements > i; i++)
	{
		printf("positions %d = %d \n", i, array[i]);
	}
	
	
	printf("at what position to insert a new element? ");
	scanf("%d", &position);
	
	
	printf("what number? ");
	scanf("%d", &insertNum);
	
	
	i = elements - 1;
	
	
	for(i; i >= position; i--)
	{
		printf("i=%d >= pos=%d \n", i, position);
		
		printf("%d << %d \n", array[i+1], array[i]);
		
		array[i+1] = array[i];
	}
	
	
	array[position] = insertNum;
	
	
	printf("positions of elements \n");
	
	for(i = 0; elements >= i; i++)
	{
		printf("positions %d = %d \n", i, array[i]);
	}
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
11
22
33
positions of elements
positions 0 = 11
positions 1 = 22
positions 2 = 33
at what position to insert a new element? 1
what number? 55
i=2 >= pos=1
0 << 33
i=1 >= pos=1
33 << 22
positions of elements
positions 0 = 11
positions 1 = 55
positions 2 = 22
positions 3 = 33

task:
delete an element in an array with a shift of numbers
pos = 1    el = 3   pos = i
0-11  1-22  2-33  3-00
0-11  1-33<-2-33  3-00    i+1 -> i
0-11  1-33  2-00<-3-00
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int elements;
	int position;
	int i;

	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	printf("enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("positions of elements \n");
	for(i = 0; elements > i; i++)
	{
		printf("positions %d = %d \n", i, array[i]);
	}
	
	
	printf("what position to remove? ");
	scanf("%d", &position);
	
	
	i = position;
	
	
	for(i; elements > i; i++)
	{
		printf("el=%d > i=%d \n", elements, i);
		
		printf("%d << %d \n", array[i], array[i+1]);
		
		array[i] = array[i+1];
	}
	
	
	printf("positions of elements \n");
	for(i = 0; elements > i; i++)
	{
		printf("positions %d = %d \n", i, array[i]);
	}
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
11
22
33
positions of elements
positions 0 = 11
positions 1 = 22
positions 2 = 33
what position to remove? 1
el=3 > i=1
22 << 33
el=3 > i=2
33 << 0
positions of elements
positions 0 = 11
positions 1 = 33
positions 2 = 0

task:
delete an element in an array with a shift of numbers
inputNum = 22 this pos = 1    el=3    i = pos 
0-11  1-22  2-33  3-00
0-11  1-33<-2-33  3-00    i+1 -> i
0-11  1-33  2-00<-3-00
code:
#include <stdio.h>

	int array[100];
	int elements;
	int found;
	int pos;
	int num;
	int i;

void displayArray()
{
	printf("array includes \n");
	
	for(i = 0; elements > i; i++)
	{
		printf("%d ", array[i]);
	}
}

int main()
{	
	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	printf("Enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	displayArray();
	
	
	printf("\n");
	printf("which number to remove? ");
	scanf("%d", &num);
	
	for(i = 0; elements > i; i++)
	{
		if(array[i] == num)
		{
			found = 1;
			
			pos = i;
			
			printf("position = %d \n", pos);
			
			break;
		}
	}

	
	if(found == 1)
	{
		for(i = pos; elements > i; i++)
		{
			printf("el=%d > i=%d \n", elements, i);
			
			printf("%d << %d \n", array[i], array[i+1]);
			
			array[i] = array[i+1];
		}
	}
	else
	{
		printf("element not found");
	}
	
	
	displayArray();
	
	
	return 0;
}
output:
how many elements to add to the array? 3
Enter 3 elements
11
22
33
array includes
11 22 33
which number to remove? 22
position = 1
el=3 > i=1
22 << 33
el=3 > i=2
33 << 0
array includes
11 33 0

task:
find the larger and smaller element in the array
0-11  1-22  2-33
big = 0-11   
1-22 > 0-11   big = 1-22    
2-33 > 1-22   big = 2-33
0-11  1-22  2-33
small = 0-11
1-22 > 0-11   small = 0-11  
2-33 > 0-11   small = 0-11
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int elements;
	int big;
	int small;
	int i;

	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	
	printf("enter %d elements \n", elements);
	
	
	for(i=0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("search for a big element... \n");
	

	big = array[0];
	
	
	for(i = 1; elements > i; i++)
	{
		printf("%d=%d > big=%d \n", i, array[i], big);
		
		if(array[i] > big)
		{
			big = array[i];
			
			printf("big = %d \n", big);
		}
	}
	
	
	printf("search for a small element... \n");
	
	
	small = array[0];
	
	
	for(i = 1; elements > i; i++)
	{
		printf("small=%d > %d=%d \n", small, i, array[i]);
		
		if(small > array[i])
		{
			small = array[i];
			
			printf("small = %d \n", small);
		}
	}
	
	
	printf("large element in the array is %d \n", big);
	
	printf("smallest element in the array is %d \n", small);
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
11
22
33
search for a big element...
1=22 > big=11
big = 22
2=33 > big=22
big = 33
search for a small element...
small=11 > 1=22
small=11 > 2=33
large element in the array is 33
smallest element in the array is 11

task:
calculate the sum of numbers in an array
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int elements;
	int sum;
	int i;
	
	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	
	printf("enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
		
		sum += array[i];
	}
	
	
	printf("sum = %d", sum);
	
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
11
22
33
sum = 66

task:
code:

---
task:
swap the numbers in the array
temp <- 0-11
0-11 <- 1-22
1-22 <- temp
temp <- 0-11 <- 1-22 <- temp
code:
#include <stdio.h>

int main()
{	
	int array[100];
	int temporary;
	
	array[0] = 11;
	array[1] = 22;
	
	temporary = array[0];
	
	array[0] = array[1];
	
	array[1] = temporary;
	
	
	printf("array[0] = %d, array[1] = %d \n", array[0], array[1]);
	
	return 0;
}
output:
array[0] = 22, array[1] = 11

task:
sort numbers in an array
code:
#include <stdio.h>

	int array[100];
	int elements;
	int temp;
	int i;
	int u;
	int y;
	
void displayArray()
{	
	for(y = 0; elements > y; y++)
	{
		printf("%d ", array[y]);
	}
	
	printf("\n");
}

int main()
{	
	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	
	printf("enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("array sorting... \n");
	displayArray();
	
	for(i = 0; elements-1 > i; i++)
	{
		for(u = 0; elements-1 > u; u++)
		{
			printf("%d > %d \n", array[u], array[u+1]);
			
			if(array[u] > array[u+1])
			{
				temp = array[u];
				
				array[u] = array[u+1];
				
				array[u+1] = temp;
			}
			
			displayArray();
		}
	}
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
33
22
11
array sorting...
33 22 11
33 > 22
22 33 11
33 > 11
22 11 33
22 > 11
11 22 33
22 > 33
11 22 33

task:
sort numbers in an array
33>22 11
22 33>11 swapped = 1(true - check again) 
22>11 33
11 22>33 swapped = 1(true - check again)
11>22 33
11 22>33 swapped = 0(false - stop)
code:
#include <stdio.h>

	int array[100];
	int elements;
	int swapped = 1;
	int temp;
	int i;
	int u;
	
void displayArray()
{	
	for(u = 0; elements > u; u++)
	{
		printf("%d ", array[u]);
	}
	
	printf("\n");
}

int main()
{	
	printf("how many elements to add to the array? ");
	scanf("%d", &elements);
	
	
	printf("enter %d elements \n", elements);
	
	for(i = 0; elements > i; i++)
	{
		scanf("%d", &array[i]);
	}
	
	
	printf("array sorting... \n");
	
	
	while(swapped)
	{
		swapped = 0;
		i = 0;
		
		while(elements-1 > i)
		{
			displayArray();
			printf(" | %d > %d | ", array[i], array[i+1]);
			
			if(array[i] > array[i+1])
			{
				temp = array[i];
				
				array[i] = array[i+1];
				
				array[i+1] = temp;

				swapped = 1;
			}
			
			displayArray();
			i++;
		}
	}
	
	return 0;
}
output:
how many elements to add to the array? 3
enter 3 elements
33
22
11
array sorting...
33 22 11
 | 33 > 22 | 22 33 11
22 33 11
 | 33 > 11 | 22 11 33
22 11 33
 | 22 > 11 | 11 22 33
11 22 33
 | 22 > 33 | 11 22 33
11 22 33
 | 11 > 22 | 11 22 33
11 22 33
 | 22 > 33 | 11 22 33

---
task:
transfer number from decimal to binary
4 / 2 = 2 remainder 0
2 / 2 = 1 remainder 0
1 / 2 = 0 remainder 1
binary number is written from bottom to top
4 decimal = 100 binary
code:
#include <stdio.h>

void DecimalToBinary(int number);

int main()
{	
	DecimalToBinary(4);

	return 0;
}

void DecimalToBinary(int number)
{
	printf("DecimalToBinary(int %d) \n", number);
	
	if(number > 1)
	{
		DecimalToBinary(number / 2);
		
		printf("number = %d \n", number);
	}
	
	printf("binary = %d \n\n", number % 2);
}
output:
DecimalToBinary(int 4)
DecimalToBinary(int 2)
DecimalToBinary(int 1)
binary = 1

number = 2
binary = 0

number = 4
binary = 0
